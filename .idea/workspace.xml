<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="95666a81-4d7b-45cf-b668-b1afccadb1fb" name="更改" comment="">
      <change beforePath="$PROJECT_DIR$/docs/zhuMQ元数据设计.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/zhuMQ元数据设计.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/lib/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2jdZYxDMzYJ1PUBA5WUGakGnAva" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Go Build.go build zhuMQ/test.executor": "Run",
    "Go Test.TestConsumerNet in zhuMQ/test.executor": "Run",
    "Go Test.TestProducerNet in zhuMQ/test.executor": "Run",
    "Go 构建.go build zhuMQ/client.executor": "Run",
    "Go 构建.go build zhuMQ/test.executor": "Run",
    "Go 测试.TestConsumer1 in zhuMQ/test.executor": "Run",
    "Go 测试.TestProducerCreate in zhuMQ/test.executor": "Run",
    "Go 测试.TestProducerPush in zhuMQ/test.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/home/zhuheqin/clone/zhuMQ",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "advanced.settings"
  }
}]]></component>
  <component name="RunManager" selected="Go 测试.TestConsumer1 in zhuMQ/test">
    <configuration name="go build zhuMQ/client" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="zhuMQ" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="zhuMQ/client" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/client/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build zhuMQ/test" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="zhuMQ" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="zhuMQ/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/test/test.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestConsumer1 in zhuMQ/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="zhuMQ" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="zhuMQ/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestConsumer1\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestProducerCreate in zhuMQ/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="zhuMQ" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="zhuMQ/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestProducerCreate\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestProducerPush in zhuMQ/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="zhuMQ" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="zhuMQ/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestProducerPush\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go 测试.TestConsumer1 in zhuMQ/test" />
        <item itemvalue="Go 测试.TestProducerPush in zhuMQ/test" />
        <item itemvalue="Go 测试.TestProducerCreate in zhuMQ/test" />
        <item itemvalue="Go 构建.go build zhuMQ/test" />
        <item itemvalue="Go 构建.go build zhuMQ/client" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.18034.61" />
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-GO-241.18034.61" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.thrift" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>